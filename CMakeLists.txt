project(LibSplit)
cmake_minimum_required(VERSION 3.1)

set(WRAPRUN_VERSION_MAJOR 0)
set(WRAPRUN_VERSION_MINOR 2)
set(WRAPRUN_VERSION_PATCH 6)
set(WRAPRUN_VERSION_TWEAK 1)

set(WRAPRUN_VERSION
  "${WRAPRUN_VERSION_MAJOR}.${WRAPRUN_VERSION_MINOR}.${WRAPRUN_VERSION_PATCH}")

set(DEVELOPMENT_BUILD 0 CACHE BOOL "Build from development branch")
if(DEVELOPMENT_BUILD)
    set(WRAPRUN_VERSION "${WRAPRUN_VERSION}.dev${WRAPRUN_VERSION_TWEAK}")
endif()

if(CMAKE_BUILD_TYPE MATCHES "Debug")
  add_definitions(-DDEBUG=1)
endif()

# Shared split library
add_library(split SHARED src/split.c)
set_target_properties(split PROPERTIES POSITION_INDEPENDENT_CODE TRUE)

# Static split library
add_library(split_static STATIC src/split.c)
set_target_properties(split_static PROPERTIES OUTPUT_NAME split)

# Hack as the PIC option for set_target_properies doesn't appear to work for CCE
if(CMAKE_C_COMPILER_ID MATCHES "Cray")
  set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -fPIC")
endif()

# Serial application wrapper
add_executable(serial src/serial_wrapper.c)

install(TARGETS split DESTINATION lib)
install(TARGETS split_static DESTINATION lib)
install(TARGETS serial DESTINATION bin)

file(GLOB script_files ${CMAKE_CURRENT_SOURCE_DIR}/bin/*)
install(FILES ${script_files}
        PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_WRITE GROUP_EXECUTE WORLD_READ 
        WORLD_EXECUTE DESTINATION "${CMAKE_INSTALL_PREFIX}/bin")

add_subdirectory(python)
